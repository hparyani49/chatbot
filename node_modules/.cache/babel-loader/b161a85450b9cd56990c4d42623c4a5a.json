{"ast":null,"code":"import _toConsumableArray from\"/home/hitesh/work/projects/chat-bot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/hitesh/work/projects/chat-bot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Header from'../Header/Header';import Footer from'../Footer/Footer';import\"./chat-screen.scss\";var MessageHolder=function MessageHolder(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"message-holder \".concat(props.source)},/*#__PURE__*/React.createElement(\"div\",{className:\"message\"},props.message));};export default function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputTxt=_useState2[0],setInputTxt=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),activeTab=_useState4[0],setActiveTab=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),messages=_useState6[0],setMessages=_useState6[1];var tabs=[{iconClass:'fa-envelope',label:'CHAT'},{iconClass:'fa-envelope',label:'MY JOBS'},{iconClass:'fa-envelope',label:'PROFILE'}];var onTabClick=function onTabClick(index){alert(tabs[index].label+' Not Available');};var messageOnChange=function messageOnChange(e){setInputTxt(e.target.value);};var onMessageSend=function onMessageSend(){var newMessages=_toConsumableArray(messages);var newMsg={message:inputTxt,source:'user'};newMessages.push(newMsg);onMessage(inputTxt).then(function(res){var botMsg={message:res.data.botMessage,source:'bot'};newMessages.push(botMsg);setMessages(newMessages);setInputTxt('');});};var onMessage=function onMessage(userMessage){return Promise.resolve({data:{botMessage:'Pardon my ignorance, I am just a dummy.'}});};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat-container\"},/*#__PURE__*/React.createElement(Header,{heading:'Job Finder',tabs:tabs,activeTab:activeTab,onTabClick:onTabClick}),/*#__PURE__*/React.createElement(\"div\",{className:\"chat-scroll-holder\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat-holder\"},messages.map(function(cur,index){return/*#__PURE__*/React.createElement(MessageHolder,Object.assign({},cur,{key:index}));}))),/*#__PURE__*/React.createElement(Footer,{onChange:messageOnChange,inputVal:inputTxt,onSend:onMessageSend})));}","map":{"version":3,"sources":["/home/hitesh/work/projects/chat-bot/src/client/components/pages/ChatScreen/ChatScreen.jsx"],"names":["React","useState","Header","Footer","MessageHolder","props","source","message","App","inputTxt","setInputTxt","activeTab","setActiveTab","messages","setMessages","tabs","iconClass","label","onTabClick","index","alert","messageOnChange","e","target","value","onMessageSend","newMessages","newMsg","push","onMessage","then","res","botMsg","data","botMessage","userMessage","Promise","resolve","map","cur"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport \"./chat-screen.scss\";\n\nconst MessageHolder = (props) => {\n    return (\n        <div className={`message-holder ${props.source}`}>\n            <div className='message'>\n                {props.message}\n            </div>\n        </div>\n    )\n}\n\nexport default function App() {\n    const [inputTxt, setInputTxt] = useState('');\n    const [activeTab, setActiveTab] = useState(0);\n    const [messages, setMessages] = useState([]);\n    let tabs = [{ iconClass: 'fa-envelope', label: 'CHAT' }, { iconClass: 'fa-envelope', label: 'MY JOBS' }, { iconClass: 'fa-envelope', label: 'PROFILE' }];\n\n    const onTabClick = (index) => {\n        alert(tabs[index].label + ' Not Available');\n    }\n\n    const messageOnChange = (e) => {\n        setInputTxt(e.target.value);\n    }\n\n    const onMessageSend = () => {\n        let newMessages = [...messages];\n        let newMsg = { message: inputTxt, source: 'user' };\n        newMessages.push(newMsg);\n        onMessage(inputTxt).then((res) => {\n            let botMsg = { message: res.data.botMessage, source: 'bot' };\n            newMessages.push(botMsg);\n            setMessages(newMessages);\n            setInputTxt('');\n        })\n    }\n\n    const onMessage = (userMessage) => {\n        return Promise.resolve({\n            data: {\n                botMessage: 'Pardon my ignorance, I am just a dummy.'\n            }\n        });\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"chat-container\">\n                <Header heading={'Job Finder'} tabs={tabs} activeTab={activeTab} onTabClick={onTabClick} />\n                <div className='chat-scroll-holder'>\n                    <div className='chat-holder'>\n                        {messages.map((cur, index) => {\n                            return <MessageHolder {...cur} key={index} />\n                        })}\n                    </div>\n                </div>\n                <Footer onChange={messageOnChange} inputVal={inputTxt} onSend={onMessageSend} />\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}